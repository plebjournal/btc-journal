function size(e){var t=e.width,i=e.height;if(t<0)throw new Error("Negative width is not allowed for Size");if(i<0)throw new Error("Negative height is not allowed for Size");return{width:t,height:i}}function equalSizes(e,t){return e.width===t.width&&e.height===t.height}var e=function(){function Observable(e){var t=this;this._resolutionListener=function(){return t._onResolutionChanged()};this._resolutionMediaQueryList=null;this._observers=[];this._window=e;this._installResolutionListener()}Observable.prototype.dispose=function(){this._uninstallResolutionListener();this._window=null};Object.defineProperty(Observable.prototype,"value",{get:function(){return this._window.devicePixelRatio},enumerable:false,configurable:true});Observable.prototype.subscribe=function(e){var t=this;var i={next:e};this._observers.push(i);return{unsubscribe:function(){t._observers=t._observers.filter((function(e){return e!==i}))}}};Observable.prototype._installResolutionListener=function(){if(null!==this._resolutionMediaQueryList)throw new Error("Resolution listener is already installed");var e=this._window.devicePixelRatio;this._resolutionMediaQueryList=this._window.matchMedia("all and (resolution: ".concat(e,"dppx)"));this._resolutionMediaQueryList.addListener(this._resolutionListener)};Observable.prototype._uninstallResolutionListener=function(){if(null!==this._resolutionMediaQueryList){this._resolutionMediaQueryList.removeListener(this._resolutionListener);this._resolutionMediaQueryList=null}};Observable.prototype._reinstallResolutionListener=function(){this._uninstallResolutionListener();this._installResolutionListener()};Observable.prototype._onResolutionChanged=function(){var e=this;this._observers.forEach((function(t){return t.next(e._window.devicePixelRatio)}));this._reinstallResolutionListener()};return Observable}();function createObservable(t){return new e(t)}var t=function(){function DevicePixelContentBoxBinding(e,t,i){var n;this._canvasElement=null;this._bitmapSizeChangedListeners=[];this._suggestedBitmapSize=null;this._suggestedBitmapSizeChangedListeners=[];this._devicePixelRatioObservable=null;this._canvasElementResizeObserver=null;this._canvasElement=e;this._canvasElementClientSize=size({width:this._canvasElement.clientWidth,height:this._canvasElement.clientHeight});this._transformBitmapSize=null!==t&&void 0!==t?t:function(e){return e};this._allowResizeObserver=null===(n=null===i||void 0===i?void 0:i.allowResizeObserver)||void 0===n||n;this._chooseAndInitObserver()}DevicePixelContentBoxBinding.prototype.dispose=function(){var e,t;if(null===this._canvasElement)throw new Error("Object is disposed");null===(e=this._canvasElementResizeObserver)||void 0===e?void 0:e.disconnect();this._canvasElementResizeObserver=null;null===(t=this._devicePixelRatioObservable)||void 0===t?void 0:t.dispose();this._devicePixelRatioObservable=null;this._suggestedBitmapSizeChangedListeners.length=0;this._bitmapSizeChangedListeners.length=0;this._canvasElement=null};Object.defineProperty(DevicePixelContentBoxBinding.prototype,"canvasElement",{get:function(){if(null===this._canvasElement)throw new Error("Object is disposed");return this._canvasElement},enumerable:false,configurable:true});Object.defineProperty(DevicePixelContentBoxBinding.prototype,"canvasElementClientSize",{get:function(){return this._canvasElementClientSize},enumerable:false,configurable:true});Object.defineProperty(DevicePixelContentBoxBinding.prototype,"bitmapSize",{get:function(){return size({width:this.canvasElement.width,height:this.canvasElement.height})},enumerable:false,configurable:true});
/**
     * Use this function to change canvas element client size until binding is disposed
     * @param clientSize New client size for bound HTMLCanvasElement
     */DevicePixelContentBoxBinding.prototype.resizeCanvasElement=function(e){this._canvasElementClientSize=size(e);this.canvasElement.style.width="".concat(this._canvasElementClientSize.width,"px");this.canvasElement.style.height="".concat(this._canvasElementClientSize.height,"px");this._invalidateBitmapSize()};DevicePixelContentBoxBinding.prototype.subscribeBitmapSizeChanged=function(e){this._bitmapSizeChangedListeners.push(e)};DevicePixelContentBoxBinding.prototype.unsubscribeBitmapSizeChanged=function(e){this._bitmapSizeChangedListeners=this._bitmapSizeChangedListeners.filter((function(t){return t!==e}))};Object.defineProperty(DevicePixelContentBoxBinding.prototype,"suggestedBitmapSize",{get:function(){return this._suggestedBitmapSize},enumerable:false,configurable:true});DevicePixelContentBoxBinding.prototype.subscribeSuggestedBitmapSizeChanged=function(e){this._suggestedBitmapSizeChangedListeners.push(e)};DevicePixelContentBoxBinding.prototype.unsubscribeSuggestedBitmapSizeChanged=function(e){this._suggestedBitmapSizeChangedListeners=this._suggestedBitmapSizeChangedListeners.filter((function(t){return t!==e}))};DevicePixelContentBoxBinding.prototype.applySuggestedBitmapSize=function(){if(null!==this._suggestedBitmapSize){var e=this._suggestedBitmapSize;this._suggestedBitmapSize=null;this._resizeBitmap(e);this._emitSuggestedBitmapSizeChanged(e,this._suggestedBitmapSize)}};DevicePixelContentBoxBinding.prototype._resizeBitmap=function(e){var t=this.bitmapSize;if(!equalSizes(t,e)){this.canvasElement.width=e.width;this.canvasElement.height=e.height;this._emitBitmapSizeChanged(t,e)}};DevicePixelContentBoxBinding.prototype._emitBitmapSizeChanged=function(e,t){var i=this;this._bitmapSizeChangedListeners.forEach((function(n){return n.call(i,e,t)}))};DevicePixelContentBoxBinding.prototype._suggestNewBitmapSize=function(e){var t=this._suggestedBitmapSize;var i=size(this._transformBitmapSize(e,this._canvasElementClientSize));var n=equalSizes(this.bitmapSize,i)?null:i;if((null!==t||null!==n)&&(null===t||null===n||!equalSizes(t,n))){this._suggestedBitmapSize=n;this._emitSuggestedBitmapSizeChanged(t,n)}};DevicePixelContentBoxBinding.prototype._emitSuggestedBitmapSizeChanged=function(e,t){var i=this;this._suggestedBitmapSizeChangedListeners.forEach((function(n){return n.call(i,e,t)}))};DevicePixelContentBoxBinding.prototype._chooseAndInitObserver=function(){var e=this;this._allowResizeObserver?isDevicePixelContentBoxSupported().then((function(t){return t?e._initResizeObserver():e._initDevicePixelRatioObservable()})):this._initDevicePixelRatioObservable()};DevicePixelContentBoxBinding.prototype._initDevicePixelRatioObservable=function(){var e=this;if(null!==this._canvasElement){var t=canvasElementWindow(this._canvasElement);if(null===t)throw new Error("No window is associated with the canvas");this._devicePixelRatioObservable=createObservable(t);this._devicePixelRatioObservable.subscribe((function(){return e._invalidateBitmapSize()}));this._invalidateBitmapSize()}};DevicePixelContentBoxBinding.prototype._invalidateBitmapSize=function(){var e,t;if(null!==this._canvasElement){var i=canvasElementWindow(this._canvasElement);if(null!==i){var n=null!==(t=null===(e=this._devicePixelRatioObservable)||void 0===e?void 0:e.value)&&void 0!==t?t:i.devicePixelRatio;var s=this._canvasElement.getClientRects();var a=void 0!==s[0]?predictedBitmapSize(s[0],n):size({width:this._canvasElementClientSize.width*n,height:this._canvasElementClientSize.height*n});this._suggestNewBitmapSize(a)}}};DevicePixelContentBoxBinding.prototype._initResizeObserver=function(){var e=this;if(null!==this._canvasElement){this._canvasElementResizeObserver=new ResizeObserver((function(t){var i=t.find((function(t){return t.target===e._canvasElement}));if(i&&i.devicePixelContentBoxSize&&i.devicePixelContentBoxSize[0]){var n=i.devicePixelContentBoxSize[0];var s=size({width:n.inlineSize,height:n.blockSize});e._suggestNewBitmapSize(s)}}));this._canvasElementResizeObserver.observe(this._canvasElement,{box:"device-pixel-content-box"})}};return DevicePixelContentBoxBinding}();function bindTo(e,i){if("device-pixel-content-box"===i.type)return new t(e,i.transform,i.options);throw new Error("Unsupported binding target")}function canvasElementWindow(e){return e.ownerDocument.defaultView}function isDevicePixelContentBoxSupported(){return new Promise((function(e){var t=new ResizeObserver((function(i){e(i.every((function(e){return"devicePixelContentBoxSize"in e})));t.disconnect()}));t.observe(document.body,{box:"device-pixel-content-box"})})).catch((function(){return false}))}function predictedBitmapSize(e,t){return size({width:Math.round(e.left*t+e.width*t)-Math.round(e.left*t),height:Math.round(e.top*t+e.height*t)-Math.round(e.top*t)})}var i=function(){function CanvasRenderingTarget2D(e,t,i){if(0===t.width||0===t.height)throw new TypeError("Rendering target could only be created on a media with positive width and height");this._mediaSize=t;if(0===i.width||0===i.height)throw new TypeError("Rendering target could only be created using a bitmap with positive integer width and height");this._bitmapSize=i;this._context=e}CanvasRenderingTarget2D.prototype.useMediaCoordinateSpace=function(e){try{this._context.save();this._context.setTransform(1,0,0,1,0,0);this._context.scale(this._horizontalPixelRatio,this._verticalPixelRatio);return e({context:this._context,mediaSize:this._mediaSize})}finally{this._context.restore()}};CanvasRenderingTarget2D.prototype.useBitmapCoordinateSpace=function(e){try{this._context.save();this._context.setTransform(1,0,0,1,0,0);return e({context:this._context,mediaSize:this._mediaSize,bitmapSize:this._bitmapSize,horizontalPixelRatio:this._horizontalPixelRatio,verticalPixelRatio:this._verticalPixelRatio})}finally{this._context.restore()}};Object.defineProperty(CanvasRenderingTarget2D.prototype,"_horizontalPixelRatio",{get:function(){return this._bitmapSize.width/this._mediaSize.width},enumerable:false,configurable:true});Object.defineProperty(CanvasRenderingTarget2D.prototype,"_verticalPixelRatio",{get:function(){return this._bitmapSize.height/this._mediaSize.height},enumerable:false,configurable:true});return CanvasRenderingTarget2D}();function createCanvasRenderingTarget2D(e,t){var n=e.canvasElementClientSize;var s=e.bitmapSize;var a=e.canvasElement.getContext("2d",t);if(null===a)throw new Error("Could not get 2d drawing context from bound canvas element. Has the canvas already been set to a different context mode?");return new i(a,n,s)}function tryCreateCanvasRenderingTarget2D(e,t){var n=e.canvasElementClientSize;if(0===n.width||0===n.height)return null;var s=e.bitmapSize;if(0===s.width||0===s.height)return null;var a=e.canvasElement.getContext("2d",t);return null===a?null:new i(a,n,s)}export{i as CanvasRenderingTarget2D,bindTo as bindCanvasElementBitmapSizeTo,createCanvasRenderingTarget2D,equalSizes,size,tryCreateCanvasRenderingTarget2D};

